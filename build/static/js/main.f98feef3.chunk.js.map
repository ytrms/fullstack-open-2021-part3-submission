{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPersonObject","post","id","delete","put","Notification","message","className","Alert","Filter","value","handleFilterChange","onChange","PersonForm","props","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","name","number","removePersonWithId","onClick","Persons","personsToShow","map","person","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","notification","setNotification","alert","setAlert","useEffect","personService","filter","toLowerCase","includes","event","target","preventDefault","find","window","confirm","returnedPerson","setTimeout","console","log","concat","catch","reason","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f98feef3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n  return axios\n    .get(baseUrl)\n    .then(response => response.data)\n}\n\nconst create = (newPersonObject) => {\n  return axios\n    .post(baseUrl, newPersonObject)\n    .then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios\n    .delete(`${baseUrl}/${id}`)\n}\n\nconst update = (newPersonObject) => {\n  return axios\n    .put(`${baseUrl}/${newPersonObject.id}`, newPersonObject)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"info\">\n      {message}\n    </div>\n  )\n}\n\nconst Alert = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"alert\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [alert, setAlert] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((persons) => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let newPersonObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.find(person => person.name === newName)) {\n      if (window.confirm(`${newName} already exists. Update the associated number?`)) {\n        const person = persons.find(person => person.name === newName)\n        newPersonObject = { ...person, number: newPersonObject.number }\n        personService\n          .update(newPersonObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification(`${person.name} successfully updated.`)\n            setTimeout(() => {\n              setNotification(null)\n            }, (5000));\n          })\n      }\n    } else {\n      personService\n        .create(newPersonObject)\n        .then((returnedPerson) => {\n          console.log(returnedPerson)\n          setPersons(persons.concat(returnedPerson))\n          setNewNumber('')\n          setNewName('')\n          setNotification(`${returnedPerson.name} succesfully added.`)\n          setTimeout(() => {\n            setNotification(null)\n          }, (5000));\n\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const removePersonWithId = id => {\n    const person = persons.find(person => person.id === id)\n    // show confirm dialog\n    if (window.confirm(`Are you sure you want to delete ${person.name} from your list?`)) {\n      // remove person from server\n      personService\n        .remove(id)\n        .then(() => {\n          // if succesful, refetch persons\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification(`${person.name} successfully removed.`)\n          setTimeout(() => {\n            setNotification(null)\n          }, (5000));\n        })\n        .catch(reason => {\n          setAlert(`${person.name} was already removed before.`)\n          setTimeout(() => {\n            setAlert(null)\n          }, (5000));\n\n        })\n    }\n  }\n\n  const personsToShow = newFilter === \"\"\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Alert message={alert} />\n      <Filter\n        value={newFilter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add a new person:</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        personsToShow={personsToShow}\n        removePersonWithId={removePersonWithId}\n      />\n    </div>\n  )\n}\n\nconst Filter = ({ value, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input\n        value={value}\n        onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  const { addPerson, newName, handleNameChange, newNumber, handleNumberChange } = props\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Person = ({ name, number, id, removePersonWithId }) => (\n  <div key={id}>\n    {name} {number} <button onClick={() => removePersonWithId(id)}>Delete</button>\n  </div>\n)\n\nconst Persons = ({ personsToShow, removePersonWithId }) => {\n  return (\n    personsToShow.map(person => {\n      return (\n        <Person name={person.name} number={person.number} key={person.id} id={person.id} removePersonWithId={removePersonWithId} />\n      )\n    })\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}